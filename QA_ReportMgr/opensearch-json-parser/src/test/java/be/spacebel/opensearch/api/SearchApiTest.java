/**
 * FedEO Earth Observation Catalog
 * FedEO provides interoperable access, following ISO/OGC interface guidelines, to Earth Observation metadata. You can try all HTTP operations described in this OpenAPI 3.0 specification.
 *
 * OpenAPI spec version: 1.2.CNL
 * Contact: yves.coene@spacebel.be
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package be.spacebel.opensearch.api;

import be.spacebel.opensearch.model.FeatureCollection;
import java.time.OffsetDateTime;
import org.junit.Test;
import org.junit.Before;
import static org.junit.Assert.*;

import javax.ws.rs.core.Response;
import org.apache.cxf.jaxrs.client.JAXRSClientFactory;
import org.apache.cxf.jaxrs.client.ClientConfiguration;
import org.apache.cxf.jaxrs.client.WebClient;


import com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;




/**
 * FedEO Earth Observation Catalog
 *
 * <p>FedEO provides interoperable access, following ISO/OGC interface guidelines, to Earth Observation metadata. You can try all HTTP operations described in this OpenAPI 3.0 specification.
 *
 * API tests for SearchApi 
 */
public class SearchApiTest {


    private SearchApi api;
    
    @Before
    public void setup() {
        JacksonJsonProvider provider = new JacksonJsonProvider();
        List providers = new ArrayList();
        providers.add(provider);
        
        api = JAXRSClientFactory.create("https://qcmms-cat.spacebel.be", SearchApi.class, providers);
        org.apache.cxf.jaxrs.client.Client client = WebClient.client(api);
        
        ClientConfiguration config = WebClient.getConfig(client); 
    }

    /**
     * Dataset search (rel&#x3D;\&quot;results\&quot;)
     *
     * The endpoint returns information about the *FedEO* dataset matching specific filtering criteria such as organisation, platform, instrument, title, keyword and lists the datasets . 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void eoCatalogSeriesParentIdentifierDatasetsGetTest() {
        String parentIdentifier = null;
        String httpAccept = null;
        Integer maximumRecords = null;
        Integer startRecord = null;
        Integer startPage = null;
        String query = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        String bbox = null;
        Double lat = null;
        Double lon = null;
        String name = null;
        Double radius = null;
        String geometry = null;
        String uid = null;
        String platform = null;
        String platformSerialIdentifier = null;
        String instrument = null;
        String sensorType = null;
        Double resolution = null;
        OffsetDateTime creationDate = null;
        OffsetDateTime modificationDate = null;
        String productionStatus = null;
        String acquisitionType = null;
        Integer orbitNumber = null;
        String orbitDirection = null;
        String track = null;
        String frame = null;
        String swathIdentifier = null;
        Double lowestLocation = null;
        Double highestLocation = null;
        String productVersion = null;
        String productQualityStatus = null;
        String productQualityDegradationTag = null;
        String processorName = null;
        String processingCenter = null;
        OffsetDateTime processingDate = null;
        String sensorMode = null;
        String archivingCenter = null;
        String processingMode = null;
        String acquisitionStation = null;
        String acquisitionSubType = null;
        Double startTimeFromAscendingNode = null;
        Double completionTimeFromAscendingNode = null;
        Double illuminationAzimuthAngle = null;
        Double illuminationZenithAngle = null;
        Double illuminationElevationAngle = null;
        String productType = null;
        String processingLevel = null;
        //FeatureCollection response = api.eoCatalogSeriesParentIdentifierDatasetsGet(parentIdentifier, httpAccept, maximumRecords, startRecord, startPage, query, startDate, endDate, bbox, lat, lon, name, radius, geometry, uid, platform, platformSerialIdentifier, instrument, sensorType, resolution, creationDate, modificationDate, productionStatus, acquisitionType, orbitNumber, orbitDirection, track, frame, swathIdentifier, lowestLocation, highestLocation, productVersion, productQualityStatus, productQualityDegradationTag, processorName, processingCenter, processingDate, sensorMode, archivingCenter, processingMode, acquisitionStation, acquisitionSubType, startTimeFromAscendingNode, completionTimeFromAscendingNode, illuminationAzimuthAngle, illuminationZenithAngle, illuminationElevationAngle, productType, processingLevel);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
    /**
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void searchTest() {
        String parentIdentifier = null;
        String datasetId = null;
        String httpAccept = null;
        //FeatureCollection response = api.search(parentIdentifier, datasetId, httpAccept);
        //assertNotNull(response);
        // TODO: test validations
        
        
    }
}
